{"version":3,"sources":["scroll.js"],"names":["debounce","func","wait","immediate","timeout","args","context","later","apply","callNow","clearTimeout","setTimeout","target","document","querySelectorAll","animationClass","animeOnScroll","windowTop","window","pageYOffset","innerHeight","forEach","el","offsetTop","classList","add","length","addEventListener"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiC;EAChD;EACA,IAAIC,OAAJ;EACA,OAAO,YAAmB;IAAA,kCAANC,IAAM;MAANA,IAAM;IAAA;;IACxB,IAAMC,OAAO,GAAG,IAAhB;;IACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAY;MACxBH,OAAO,GAAG,IAAV;MACA,IAAI,CAACD,SAAL,EAAgBF,IAAI,CAACO,KAAL,CAAWF,OAAX,EAAoBD,IAApB;IACjB,CAHD;;IAIA,IAAMI,OAAO,GAAGN,SAAS,IAAI,CAACC,OAA9B;IACAM,YAAY,CAACN,OAAD,CAAZ;IACAA,OAAO,GAAGO,UAAU,CAACJ,KAAD,EAAQL,IAAR,CAApB;IACA,IAAIO,OAAJ,EAAaR,IAAI,CAACO,KAAL,CAAWF,OAAX,EAAoBD,IAApB;EACd,CAVD;AAWD,CAdD;;AAgBA,IAAMO,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,CAAf;AACA,IAAMC,cAAc,GAAG,SAAvB;;AAEA,SAASC,aAAT,GAAyB;EACvB,IAAMC,SAAS,GAAGC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,WAAP,GAAqB,IAA5D;EACAR,MAAM,CAACS,OAAP,CAAe,UAACC,EAAD,EAAQ;IACrB,IAAIL,SAAS,GAAGK,EAAE,CAACC,SAAnB,EAA8B;MAC5BD,EAAE,CAACE,SAAH,CAAaC,GAAb,CAAiBV,cAAjB;IACD;EACF,CAJD;AAKD;;AAEDC,aAAa;;AAEb,IAAIJ,MAAM,CAACc,MAAX,EAAmB;EACjBR,MAAM,CAACS,gBAAP,CACE,QADF,EAEE3B,QAAQ,CAAC,YAAY;IACnBgB,aAAa;EACd,CAFO,CAFV,EAKE,GALF;AAOD","file":"scroll.62f5c327.js","sourceRoot":"..\\src","sourcesContent":["const debounce = function (func, wait, immediate) {\r\n  // debounce function to stop triggering action\r\n  let timeout;\r\n  return function (...args) {\r\n    const context = this;\r\n    const later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n};\r\n\r\nconst target = document.querySelectorAll(\"[data-anime\");\r\nconst animationClass = \"animate\";\r\n\r\nfunction animeOnScroll() {\r\n  const windowTop = window.pageYOffset + window.innerHeight * 0.75;\r\n  target.forEach((el) => {\r\n    if (windowTop > el.offsetTop) {\r\n      el.classList.add(animationClass);\r\n    }\r\n  });\r\n}\r\n\r\nanimeOnScroll();\r\n\r\nif (target.length) {\r\n  window.addEventListener(\r\n    \"scroll\",\r\n    debounce(function () {\r\n      animeOnScroll();\r\n    }),\r\n    200\r\n  );\r\n}\r\n"]}